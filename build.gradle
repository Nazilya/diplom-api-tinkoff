plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    restAssuredVersion = "5.1.1",
    lombokVersion = "1.18.22",
    junitVersion = "5.9.0",
    slf4jVersion = "2.0.6",
    jacksonVersion = "2.14.0"

allure {
    report {
        version.set("$allureVersion")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("$allureVersion")
            }
        }
    }
}

//dependencies {
//    testImplementation(
//            'org.junit.jupiter:junit-jupiter:5.9.0',
//            'com.codeborne:selenide:6.10.1',
//            'org.assertj:assertj-core:3.23.1',
//            'com.codeborne:pdf-test:1.5.0',
//            'com.codeborne:xls-test:1.4.3',
//            'com.opencsv:opencsv:5.7.1',
//            "io.rest-assured:rest-assured:5.3.0"
//    )
//    implementation 'com.google.code.gson:gson:2.10.1',
//            'org.projectlombok:lombok:1.18.22',
//            'com.github.javafaker:javafaker:1.0.2'
//
//    //          'com.fasterxml.jackson.core:jackson-core:2.14.0',
////            'com.fasterxml.jackson.core:jackson-databind:2.14.0'
//}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:5.9.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
//            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
//            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "io.qameta.allure:allure-rest-assured:${allureVersion}",
            "org.aeonbits.owner:owner:1.0.12",
            "com.github.javafaker:javafaker:1.0.2",
            "com.google.code.gson:gson:2.10.1"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}